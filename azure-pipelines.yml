variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  NEXT_TELEMETRY_DISABLED: '1'
  node_version: ^10.10.0

jobs:
  - job: build
    pool:
      vmImage: 'windows-2019'
    steps:
      - checkout: self
        fetchDepth: 1

      - task: CacheBeta@0
        inputs:
          key: yarn | $(Agent.OS) | yarn.lock
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - script: |
          yarn install --frozen-lockfile --check-files
        displayName: 'Install dependencies'

      - script: |
          git clean -xdf -e dist
        displayName: Clean for publishing

      - task: PublishBuildArtifacts@1
        inputs:
          parallel: true
          parallelCount: 8
          artifactName: build
          pathtoPublish: '$(System.DefaultWorkingDirectory)'

  - job: test_ie11
    dependsOn: build
    pool:
      vmImage: 'windows-2019'
    steps:
      - checkout: none #skip checking out the default repository resource

      - task: DownloadBuildArtifacts@0
        displayName: 'Download Build Artifacts'
        inputs:
          artifactName: build
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: CacheBeta@0
        inputs:
          key: yarn | $(Agent.OS) | yarn.lock
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: 'Install Node.js'

      - script: |
          yarn install --frozen-lockfile --check-files --ignore-scripts
        displayName: 'Install dependencies'

      - script: |
          yarn testie --forceExit test/integration/production/
        displayName: 'Run tests'

  - job: test_chrome
    dependsOn: build
    pool:
      vmImage: 'windows-2019'
    strategy:
      maxParallel: 10
      matrix:
        node-10-1:
          group: 1/4
        node-10-2:
          group: 2/4
        node-10-3:
          group: 3/4
        node-10-4:
          group: 4/4
    steps:
      - checkout: none #skip checking out the default repository resource

      - task: DownloadBuildArtifacts@0
        displayName: 'Download Build Artifacts'
        inputs:
          artifactName: build
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: CacheBeta@0
        inputs:
          key: yarn | $(Agent.OS) | yarn.lock
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - script: |
          wmic datafile where name="C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe" get Version /value
        displayName: 'List Chrome version'

      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: 'Install Node.js'

      - script: |
          yarn install --frozen-lockfile --check-files --ignore-scripts
        displayName: 'Install dependencies'

      - script: |
          node run-tests.js -g $(group)
        displayName: 'Run tests'
