import {
  defineConfig,
  devices,
  type PlaywrightTestConfig,
} from '@playwright/test'
import { deepMerge } from '../../../lib/deep-merge'
type withNextConfigFunction = (
  config: PlaywrightTestConfig
) => PlaywrightTestConfig

/**
 * A utility function for efficiently extending the Next.js default Playwright config
 * @param configOrFunction
 * @returns
 */
export function withNext(
  configOrFunction: PlaywrightTestConfig | withNextConfigFunction = {}
): PlaywrightTestConfig {
  const config =
    typeof configOrFunction === 'function'
      ? configOrFunction(defaultPlaywrightConfig)
      : deepMerge(defaultPlaywrightConfig, configOrFunction)
  return defineConfig(config)
}

/**
 * This is the default configuration generated by Playwright as of v1.43.0 with some modifications.
 *
 * - the `testMatch` property is configured to match all `*.spec.js` or `*.spec.ts` files within the `app` and `pages` directories
 * - the `use` property is configured with a baseURL matching the expected dev server endpoint (http://127.0.0.1:3000)
 * - the `webserver` property is configured to run `next dev`.
 */
export const defaultPlaywrightConfig: PlaywrightTestConfig = {
  testMatch: '{app,pages}/**/*.spec.{t,j}s',
  /* Run tests in files in parallel */
  fullyParallel: true,
  /* Fail the build on CI if you accidentally left test.only in the source code. */
  forbidOnly: process.env.CI === 'true',
  /* Retry on CI only */
  retries: process.env.CI === 'true' ? 2 : 0,
  /* Reporter to use. See https://playwright.dev/docs/test-reporters */
  reporter: [['list'], ['html', { open: 'never' }]],
  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
  use: {
    /* Base URL to use in actions like `await page.goto('/')`. */
    baseURL: 'http://127.0.0.1:3000',

    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
    trace: 'on-first-retry',
  },

  /* Configure projects for major browsers */
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },

    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },

    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },

    /* Test against mobile viewports. */
    // {
    //   name: 'Mobile Chrome',
    //   use: { ...devices['Pixel 5'] },
    // },
    // {
    //   name: 'Mobile Safari',
    //   use: { ...devices['iPhone 12'] },
    // },

    /* Test against branded browsers. */
    // {
    //   name: 'Microsoft Edge',
    //   use: { ...devices['Desktop Edge'], channel: 'msedge' },
    // },
    // {
    //   name: 'Google Chrome',
    //   use: { ...devices['Desktop Chrome'], channel: 'chrome' },
    // },
  ],

  /* Run your local dev server before starting the tests */
  webServer: {
    command: 'next dev',
    url: 'http://127.0.0.1:3000',
    reuseExistingServer: !process.env.CI,
  },
}
