exports.foo = function () {
  return 'I am foo'
}

exports.bar = function () {
  if (typeof window !== 'undefined') {
    // next-error-browser-binary-loader would fail the build if we actually tried to import the .node file.
    return
  }

  try {
    require('./binary.node')
  } catch (err) {
    if (
      err &&
      err instanceof Error &&
      'code' in err &&
      err.code === 'ERR_DLOPEN_FAILED'
    ) {
      // The .node file isn't actually a valid binary, so opening it *should* fail.
      // so if it threw 'ERR_DLOPEN_FAILED', everything works as expected.
      // (as opposed to e.g. 'MODULE_NOT_FOUND', which indicates a problem with our bundling)
      return
    }

    throw err
  }

  throw new Error(
    'We should never get here, the require call should always throw'
  )
}
